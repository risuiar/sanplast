---
import Layout from '../../layouts/Layout.astro';
import { ViewTransitions } from 'astro:transitions';
import { getProducts } from '../../utils/api';

export const prerender = true;

export async function getStaticPaths() {
  const products = await getProducts();
  return products.map((product) => ({
    params: { id: product.id },
    props: { product },
  }));
}

const { product } = Astro.props;

const baseImageUrl = "https://backend-sanplast.mateando.com/images/productos/";
const whatsappNumber = "5493764688886";
const whatsappMessage = `Hola, estoy interesado en el producto ${product.modelo}`;
const whatsappUrl = `https://wa.me/${whatsappNumber}?text=${encodeURIComponent(whatsappMessage)}`;

const images = [
  product.image1,
  product.image2,
  product.image3,
  product.image4,
  product.image5,
].filter(Boolean);
console.log(images)
---

<Layout title={`${product.modelo} - Sanplast`}>
  <ViewTransitions />
  <main class="container mx-auto px-4 py-8">
    <div class="mb-8">
      <a href="/productos/" class="text-primary hover:underline">← Volver a productos</a>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8" transition:name={`product-${product.id}`}>
      <!-- Card de imagen -->
      <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <!-- Imagen principal con mejor aspecto -->
        <div class="aspect-square relative bg-gray-50 p-4">
          <img
            id="main-image"
            src={`${baseImageUrl}${images[0]}`}
            alt={product.modelo}
            class="absolute inset-0 w-full h-full object-contain transition-opacity duration-300"
            transition:name={`product-image-${product.id}`}
          />
        </div>

        <!-- Galería de miniaturas con espaciado responsivo -->
        {images.length > 1 && (
          <div class="p-4 md:p-6 bg-gray-50 border-t border-gray-100">
            <div class="flex flex-wrap justify-center gap-2 md:gap-3">
              {images.map((image, index) => (
                <button
                  class={`thumbnail rounded-md overflow-hidden transition-all duration-200 hover:opacity-90 ${
                    index === 0 ? 'ring-2 ring-primary ring-offset-2' : 'ring-1 ring-gray-200'
                  }`}
                  data-image={`${baseImageUrl}${image}`}
                >
                  <div class="w-12 h-12 md:w-14 md:h-14 bg-white">
                    <img
                      src={`${baseImageUrl}${image}`}
                      alt={`${product.modelo} - vista ${index + 1}`}
                      class="w-full h-full object-contain p-1"
                      loading="lazy"
                    />
                  </div>
                </button>
              ))}
            </div>
          </div>
        )}
      </div>

      <!-- Card de información -->
      <div class="bg-white rounded-lg shadow-md p-8">
        <h1 class="text-3xl font-bold text-gray-800 mb-6" transition:name={`product-title-${product.id}`}>
          {product.modelo}
        </h1>

        {product.descripcion && (
          <div class="prose max-w-none mb-6">
            <p class="text-gray-600">{product.descripcion}</p>
          </div>
        )}

        <!-- Especificaciones -->
        <div class="grid grid-cols-2 gap-4 mb-8">
          {product.capacidad_litros && (
            <div>
              <p class="text-gray-600 text-sm">Capacidad</p>
              <p class="font-semibold">{product.capacidad_litros} litros</p>
            </div>
          )}
          {product.altura_cm && parseFloat(String(product.altura_cm)) > 0 && (
            <div>
              <p class="text-gray-600 text-sm">Alto</p>
              <p class="font-semibold">{product.altura_cm} cm</p>
            </div>
          )}
          {product.diametro_cm && parseFloat(String(product.diametro_cm)) > 0 && (
            <div>
              <p class="text-gray-600 text-sm">Diámetro</p>
              <p class="font-semibold">{product.diametro_cm} cm</p>
            </div>
          )}
          {product.uso_recomendado && (
            <div>
              <p class="text-gray-600 text-sm">Uso recomendado</p>
              <p class="font-semibold">{product.uso_recomendado}</p>
            </div>
          )}
        </div>

        <!-- Botón de WhatsApp -->
        <div class="mt-auto">
          <a
            href={whatsappUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center justify-center w-full px-6 py-3 bg-green-500 text-white font-medium rounded-lg hover:bg-green-600 transition-colors"
          >
            <svg class="w-6 h-6 mr-2" fill="currentColor" viewBox="0 0 24 24">
              <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
            </svg>
            Consultar por WhatsApp
          </a>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
function initializeGallery() {
  const mainImage = document.getElementById('main-image') as HTMLImageElement;
  const thumbnails = document.querySelectorAll('.thumbnail');

  thumbnails.forEach((thumb) => {
    thumb.addEventListener('click', () => {
      // Añadir efecto de fade al cambiar la imagen
      if (mainImage) {
        mainImage.style.opacity = '0';

        setTimeout(() => {
          // Update main image
          const newImageSrc = thumb.getAttribute('data-image');
          if (newImageSrc && mainImage) {
            mainImage.src = newImageSrc;
            mainImage.style.opacity = '1';
          }
        }, 200);
      }

      // Update active thumbnail
      thumbnails.forEach((t) => {
        t.classList.remove('ring-primary', 'ring-2', 'ring-offset-2');
        t.classList.add('ring-1', 'ring-gray-200');
      });
      thumb.classList.remove('ring-1', 'ring-gray-200');
      thumb.classList.add('ring-2', 'ring-primary', 'ring-offset-2');
    });
  });
}

// Initialize on regular page load
document.addEventListener('DOMContentLoaded', initializeGallery);

// Initialize on Astro page transitions
document.addEventListener('astro:page-load', initializeGallery);
</script>
